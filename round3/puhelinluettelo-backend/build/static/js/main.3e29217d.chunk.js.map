{"version":3,"sources":["components/Part.js","components/Content.js","components/Form.js","components/Search.js","components/Notification.js","services/serverInterface.js","App.js","index.js"],"names":["Part","_ref","name","number","handler","react_default","a","createElement","Fragment","onClick","Content","parts","buttonHandler","map","part","components_Part","Object","assign","key","id","Form","handlers","values","onSubmit","handleSubmit","htmlFor","value","newName","onChange","handleNameChange","newNum","handleNumChange","type","Search","Notification","message","className","db","jsonMessageOptions","method","data","body","JSON","stringify","headers","Content-Type","serverInterface","fetch","then","res","json","addMe","status","Error","person","concat","ok","err","App","_useState","useState","_useState2","slicedToArray","persons","setPersons","_useState3","_useState4","newSearch","setNewSearch","_useState5","_useState6","setNewName","_useState7","_useState8","setNewNum","_useState9","_useState10","notification","setNotification","_useState11","_useState12","notificationTimer","setNotificationTimer","visibleNumbers","filter","p","toUpperCase","includes","showMessage","setTimeout","clearMessage","clearTimeout","resetInput","addNewPerson","newPerson","existingPerson","find","copy","objectSpread","window","confirm","console","log","successHandler","catch","errorHandler","removeFromMemory","useEffect","peopleFromServer","alert","components_Notification","components_Search","event","target","components_Form","preventDefault","components_Content","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3e29217d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Part = ({name, number, handler}) => (\n  <>\n  <p>{name} {number} <button onClick={ handler }>Remove</button></p>\n  </>\n)\n\nexport default Part\n","import React from 'react';\nimport Part from './Part.js';\n\nconst Content = ({parts, buttonHandler}) => {\n\n  let result = parts.map((part) => <Part key={part.id} {...part} handler={ () => buttonHandler(part) }/>);\n\n  return (result);\n}\n\nexport default Content\n","import React from 'react';\n\nconst Form = ({handlers, values}) => {\n  return (\n    <form onSubmit={ handlers.handleSubmit }>\n    <div>\n      <label htmlFor=\"name\">name: </label>\n      <input name=\"name\" value={ values.newName } onChange={ handlers.handleNameChange }/>\n\n      <label htmlFor=\"number\">number: </label>\n      <input name=\"number\" value={ values.newNum } onChange={ handlers.handleNumChange }/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n    </form>\n  );\n}\n\nexport default Form\n","import React from 'react';\n\nconst Search = ({handler, value}) => {\n  return (\n    < >\n      <label htmlFor=\"search\">Filter based on name: </label>\n      <input name=\"search\" value={ value } onChange={ handler }/>\n    < />\n  );\n}\n\nexport default Search\n","import React from 'react';\nimport './css/Notification.css'\nconst Notification = ({type, message}) => {\n\n  if (!message || !type)\n    return null;\n\n  return (\n    <div id=\"notification\" className={ type }>\n      { message }\n    </div>\n  )\n}\n\nexport default Notification\n","const db = \"/api/persons\";\n\nconst jsonMessageOptions = (method, data) => {\n  return {\n    method: method,\n    body: JSON.stringify(data),\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  };\n}\n\nconst getPeople = () => {\n\n  return fetch(db)\n    .then(function(res) {\n      return res.json();\n    });\n\n}\n\nconst addPerson = (addMe) => {\n  return fetch(db, jsonMessageOptions('POST', addMe))\n    .then(res => {\n      if (res.status === 201 || res.status === 400)\n        return res.json()\n                .then(data => {\n                  if (data.message)\n                    throw Error(data.message);\n\n                  //Received new person.\n                  return data;\n                });\n\n      throw Error(\"Could not add person\")\n    });\n}\n\nconst removePerson = (person) => {\n  return fetch(`${db}/${person.id}`, {\n    method: 'DELETE'\n  })\n  .then(res => {\n    if (!res.ok)\n      throw Error(`${person.name} already removed`);\n  });\n}\n\nconst changeNumber = (person) => {\n  return fetch(`${db}/${person.id}`, jsonMessageOptions('PUT', person))\n    .then(res => {\n      switch (res.status) {\n        case 204:\n          return person;\n        case 400:\n          return res.json()\n                  .then(err => {throw Error(err.message)});\n        case 404:\n          throw Error(`${person.name} already removed!`);\n        default:\n          throw Error('Could not remove person.');\n      }\n    })\n    .then(data => data);\n}\n\nexport default {\n  getPeople,\n  addPerson,\n  removePerson,\n  changeNumber\n}\n","import React, { useState, useEffect } from 'react'\nimport Content from './components/Content.js';\nimport Form from './components/Form.js';\nimport Search from './components/Search.js';\nimport Notification from './components/Notification.js';\nimport serverInterface from './services/serverInterface.js';\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]);\n\n\n  const [ newSearch, setNewSearch ] = useState('');\n  const [ newName, setNewName ] = useState('');\n  const [ newNum, setNewNum ] = useState('');\n  const [ notification, setNotification ] = useState({});\n  const [ notificationTimer, setNotificationTimer ] = useState();\n\n  const visibleNumbers = (newSearch === '') ? persons : persons.filter(p => p.name.toUpperCase().includes(newSearch.toUpperCase()));\n\n//-----------------------------------------------------------------------------------------------------------------------------------\n\n  const showMessage = (type, message) => {\n    setNotification({type, message});\n    setNotificationTimer(setTimeout(clearMessage, 3000));\n  }\n\n  const clearMessage = () => {\n    setNotificationTimer(clearTimeout(notificationTimer));\n    setNotification({});\n  }\n\n  const personIsListed = (person) => persons.find(p => p.name === person.name);\n\n  const resetInput = () => {\n    setNewName('');\n    setNewNum('');\n  }\n\n  const addNewPerson = (newPerson) => {\n    let existingPerson = personIsListed(newPerson);\n\n    if (!existingPerson)\n      serverInterface\n      .addPerson(newPerson)\n      .then(person => {\n        resetInput();\n\n        setPersons(persons.concat(person));\n        successHandler(`Added ${person.name}!`);\n      })\n      .catch(errorHandler);\n    else {\n      let copy = {...existingPerson, number: newPerson.number};\n\n      if (window.confirm(`${newPerson.name} has already been added to the phonebook!\\nWould you like to replace their number with the new one?`))\n      serverInterface\n      .changeNumber(copy)\n      .then(person => {\n        resetInput();\n        console.log('Making changes');\n        setPersons(persons.map(p => p.id !== person.id ? p : person));\n        successHandler(`Changed ${person.name}'s number to ${person.number}'!`);\n      })\n      .catch(err => errorHandler(err, copy));\n    }\n  }\n\n  const removeFromMemory = (person) => {\n    setPersons(persons.filter(p => p.id !== person.id));\n  }\n\n//---------------------------------------------------------------------------------------------------------------------------------\n\n  //Fetch data for initial render.\n  useEffect(() => {\n\n    serverInterface\n      .getPeople()\n      .then(peopleFromServer => setPersons(peopleFromServer))\n      .catch(err => alert(`${err.message}\\nPlease check your that the server is running.`));\n\n  }, []);\n\n//----------------------------------------------------------------------------------------------------------------------------------\n\n  const errorHandler = (err, person) => {\n\n    //Remove numbers that are no longer valid.\n    if (err.message.includes('already removed'))\n      removeFromMemory(person);\n\n    showMessage(\"error\", err.message);\n  }\n\n  const successHandler = (message) => {\n    showMessage(\"success\", message);\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value);\n  }\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value);\n  }\n\n  const handleRemoval = person => {\n\n    if (window.confirm(`Do you really want to remove ${person.name}`))\n      serverInterface\n        .removePerson(person)\n        .then(() => {\n          removeFromMemory(person);\n          successHandler(`Removed ${person.name}!`);\n        })\n        .catch(err => errorHandler(err, person));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let newPerson = {\n      name: newName,\n      number: newNum\n    };\n\n    addNewPerson(newPerson);\n  }\n\n//-------------------------------------------------------------------------------------------------------------------------------------\n\n  return (\n    <div>\n      <Notification { ...notification }/>\n      <h1>Phonebook</h1>\n      <Search value={ newSearch } handler={ handleSearch } />\n      <h2>Add new</h2>\n      <Form handlers={ {handleSubmit, handleNumChange, handleNameChange} } values={ {newNum, newName} } />\n      <h2>Numbers</h2>\n      <Content parts={ visibleNumbers } buttonHandler={ handleRemoval } />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}